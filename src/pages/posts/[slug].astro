---
import PostLayout from "../../layouts/Post.astro";
import { getCollection } from 'astro:content';
import { marked } from 'marked';

// ‚úÖ Fetch all posts to generate dynamic paths
export async function getStaticPaths() {
  const posts = await getCollection('posts');

  // Generate paths for each post slug
  return posts.map((post) => ({
    params: { slug: post.slug }, // `slug` will be the dynamic part of the URL
  }));
}

// ‚úÖ Fetch the current post based on the `slug` parameter from the URL
const { slug } = Astro.params; // Access the dynamic `slug`
const post = await getCollection('posts').then((posts) =>
  posts.find((p) => p.slug === slug)
);

const postHTML = post.body ? marked(post.body) : ""; // Convert markdown to HTML

// ‚úÖ Fetch the Facebook post URL based on the post's ID (or filename)
let articleUrl = '';
const baseUrl = process.env.BASE_URL || 'http://localhost:4321'; // Default to localhost for local development

try {
  // Fetch the URL of the Facebook post from the API, using the full URL
  const response = await fetch(`${baseUrl}/api/get_facebook_post_url?generated_post_id=${post.id.replace('.md', '')}`);
  const data = await response.json();
  articleUrl = data.article_url; // If we get the article URL from the API
} catch (error) {
  console.warn("‚ùå Error fetching Facebook Post URL:", error);
}
---

<PostLayout post={post} />

{/* If the articleUrl is available, display the button */}
{articleUrl && (
  <div style="text-align: center; margin-top: 40px;">
    <h3>Join the Discussion!</h3>
    <p>Have thoughts to share? Click the button below to head to our Facebook post and join the conversation! üöÄüí¨</p>

    {/* Button to Facebook post for commenting */}
    <div style="margin-bottom: 20px;">
      <a href={articleUrl} target="_blank" rel="noopener noreferrer">
        <button style="padding: 10px 20px; font-size: 16px; background-color: #3b5998; color: white; border: none; border-radius: 5px;">
          Comment on Facebook
        </button>
      </a>
    </div>
  </div>
)}
